#/usr/bin/python
import sys,os
import shutil
import collections
import subprocess
from subprocess import *
from ROOT import *
from array import array

database = [(30627, 62394.9), (30636, 21943.2), (30642, 60512.7), (30646, 83095), (30651, 73466.6), (30655, 17714.3), (30658, 71308.7), (30663, 3222.85), (30672, 61320.3), (30676, 88991.8), (30681, 13770.6), (30686, 75230.4), (30690, 73088.6), (30695, 79612.2), (30699, 77065.7), (30700, 7243.32), (30705, 270.931), (30706, 2349.43), (30707, 12.8163), (30708, 85115), (30712, 72370.8), (30717, 82933.2), (30721, 83841.8), (30726, 81547), (30730, 47860.3), (30731, 5070.23), (30732, 826.497), (30735, 421.752), (30736, 25834.8), (30741, 44492.9), (30742, 43.9193), (30743, 375.716), (30744, 1469.93), (30746, 160.438), (30747, 34032.4), (30751, 80918), (30756, 80770.1), (30760, 83923.7), (30765, 80991.2), (30769, 82698.8), (30774, 81060.1), (30778, 1917.54), (30779, 81483.2), (30784, 10462.3), (30785, 86314.2), (30789, 67413.3), (30794, 81395.5), (30799, 93703.2), (30804, 79808), (30808, 68538.6), (30813, 12928.7), (30814, 60676.7), (30815, 13759.9), (30819, 74455), (30824, 1257.71), (30826, 79253.2), (30832, 78631.8), (30837, 80863.2), (30841, 83606.7), (30846, 80518.4), (30850, 83136.3), (30855, 16053.1), (30858, 140.95), (30859, 76768.8), (30865, 78020.6), (30870, 79269.3), (30876, 84146.3), (30881, 65718.6), (30889, 66158.1), (30894, 80542.9), (30898, 84624.4), (30903, 39209.5), (30905, 46023.8), (30909, 76824.5), (30916, 84658.6), (30922, 88179.1), (30923, 603.69), (30926, 5091.48), (30929, 429.794), (30936, 63734.3), (30943, 74614.2), (30948, 81372.9), (30953, 87823.2), (30961, 28011.4), (30962, 41776.1), (30963, 692.611), (30964, 1.94703), (30965, 17981.1), (30969, 72118.9), (30974, 76340.4), (30978, 82887.5), (30983, 80673.3), (30987, 87531.3), (30992, 76816.8), (31002, 28606.1), (31003, 2977.54), (31008, 80772.1), (31012, 83359.3), (31016, 81241.1), (31020, 84577.8), (31025, 98278.8), (31029, 64160.8), (31034, 103650), (31038, 61862.8), (31043, 104204), (31053, 78113.3), (31057, 83888.3), (31063, 87658.8), (31067, 72147.5), (31072, 81111), (31076, 81036.7), (31081, 42511.8), (31082, 958.46), (31083, 285.827), (31084, 812.906), (31085, 1109.15), (31086, 11445.6), (31094, 79323.4), (31099, 87384.3), (31103, 89181.2), (31113, 41846.7), (31114, 2771.61), (31118, 79299.9), (31123, 2943.55), (31124, 152.458), (31125, 79937.5), (31130, 1481.39), (31132, 74587.4), (31137, 89393.7), (31141, 78607.3), (31146, 80092), (31150, 83610.9), (31155, 2995.24), (31159, 6313.59), (31161, 507.136), (31162, 367.961), (31163, 920.92), (31166, 60959.9), (31170, 80443), (31171, 4994), (31172, 350.646), (31182, 77146.4), (31186, 74367.7), (31192, 78420.3), (31196, 76285.1), (31201, 79436.8), (31205, 4500.37), (31206, 84405.3), (31211, 76995.5), (31216, 83069.9), (31224, 81395.2), (31228, 79430.2), (31233, 79124.8), (31241, 83539.5), (31246, 76698.6), (31250, 81583.3), (31251, 23124.6), (31256, 59849.1), (31260, 84634.3), (31275, 67712.1), (31279, 83773.7), (31284, 76968.3), (31285, 1002.28), (31286, 409.173), (31287, 1423.84), (31291, 78992.3), (31296, 84169.3), (31297, 601.46), (31301, 644.341), (31302, 1410.32), (31304, 80525.4), (31309, 80490.6), (31313, 99462.5), (31318, 65689.5), (31322, 82664.2), (31327, 79432.9), (31331, 15921.6), (31334, 73555.5), (31339, 91010.1), (31343, 79320.1), (31351, 66580.8), (31355, 83462), (31360, 78369.2), (31361, 471.164), (31365, 113021), (31370, 54163.9), (31374, 90315.6), (31379, 12996.8), (31382, 52805.3), (31386, 83768.5), (31391, 84134.2), (31395, 78587), (31403, 57745.2), (31405, 14236.4), (31409, 16847.8), (31410, 65733), (31411, 6928.7), (31416, 77870.6), (31420, 82435.4), (31425, 82884.4), (31429, 86504.1), (31435, 18081.6), (31437, 64874.9), (31448, 207.861), (31452, 72645.4), (31458, 79948.4), (31464, 54685.5), (31470, 26534.2), (31476, 49061.4), (31480, 85829.9), (31485, 80827.9), (31489, 84373.9), (31495, 79515), (31499, 81021.1), (31505, 81670), (31511, 79590.1), (31527, 26750.7), (31528, 36232.1), (31533, 82923.8), (31538, 80945.7), (31542, 84652.2), (31547, 79400.1), (31552, 83805), (31557, 96558.9), (31561, 65201.9), (31573, 64901), (31577, 81517.9), (31582, 80496.4), (31586, 83101.7), (31591, 97836.7), (31595, 67382.6), (31600, 76246.5), (31601, 79.1604), (31602, 4124.05), (31606, 79427.8), (31611, 6325.44), (31612, 8384.6), (31613, 61972.3), (31614, 2348.86), (31615, 3327.93), (31619, 40107.3), (31622, 44308.4), (31627, 55020.7), (31629, 25977.8), (31633, 3807.79), (31634, 392.928), (31636, 38037.4), (31638, 42678.9), (31643, 73504.2), (31647, 82833.5), (31652, 107163), (31656, 55914.9), (31662, 80321.5), (31666, 84165.5), (31671, 80927.9), (31675, 28971.5), (31676, 54452.9), (31681, 7504.87), (31684, 65045.6), (31688, 83508.2), (31693, 80784.1), (31697, 83865.4), (31702, 90213.2), (31706, 89099.3), (31711, 71294.2), (31715, 78193.4), (31722, 25721.3), (31727, 14059.6), (31728, 84816.2), (31729, 438.243), (31731, 82467.9), (31733, 85408.7), (31735, 84410.4), (31737, 84903.6), (31739, 87808), (31747, 282.282), (31752, 73262.7), (31757, 104412), (31761, 58517.2), (31766, 80014.6), (31770, 83490.3), (31775, 79524.2), (31779, 3700.12), (31780, 90475.8), (31786, 69398.5), (31794, 67437.8), (31797, 2075.08), (31798, 9097.7), (31806, 497.467), (31809, 64073.8), (31813, 85912.3), (31818, 78824.5), (31822, 83901.8), (31827, 84229.7), (31831, 77986.6), (31836, 79835.1), (31840, 20804.2), (31844, 24938.8), (31854, 55094.3), (31858, 82220.7), (31874, 3952.62), (31877, 70696.7), (31882, 82191.5), (31886, 82917.5), (31891, 81082.5), (31895, 102239), (31902, 74058.9), (31908, 71811.4), (31916, 35627.8), (31922, 696.547), (31923, 80650), (31930, 80510), (31936, 83353.6), (31944, 80115.6), (31945, 84056.1), (31947, 113585), (31949, 69708.4), (31951, 76701.7), (31953, 77842), (31955, 83571.5), (31957, 94897.7), (31959, 48948.4), (31964, 64551), (31970, 39549.7), (31983, 67139.2), (31987, 85555.8), (31992, 78762.8), (31998, 120602), (32003, 41166.3), (32008, 85709.8), (32022, 60965.1), (32026, 82341.3), (32031, 81457.1), (32035, 86798.2), (32042, 78647.8), (32046, 2529.34), (32056, 68120), (32061, 77803.5), (32065, 82761), (32070, 65507.3), (32072, 26866.8), (32076, 88313.9), (32082, 65050.7), (32086, 8902.8), (32088, 71087.5), (32093, 16292.7), (32097, 62217.8), (32101, 93708.8), (32106, 78244.2), (32110, 86164), (32115, 69821.1), (32119, 33461), (32121, 15719.3), (32131, 76597.7), (32139, 77509), (32144, 80069.2), (32148, 11394.2), (32149, 88916.9)]

print "there are ", len(database), "runs."

path=os.getcwd()
file_list = os.listdir(path)
fList = open('fileRuns.dat')
processfile = []
count = 0
for i in fList:
  processfile.append(i.rstrip())
  count = count+1

print "now processing ", count, " files."

ndata = len(database)

if count != ndata:
    print "data size not match."

runStart = 30627
runEnd = 32149

H2_qpe_fprompt_7 = TH2D( "H2_qpe_fprompt_7", "; qpe [1/bin]; fprompt [0.01/bin]", 2000, 0, 2000, 100, 0.0, 1.0 );
H2_qpe_fprompt_cuts = TH2D( "H2_qpe_fprompt_cuts", "fmaxpe<0.75; qpe [1/bin]; fprompt [0.01/bin]", 2000, 0, 2000, 100, 0.0, 1.0 );
H2_qpe_fprompt_cuts1 = TH2D( "H2_qpe_fprompt_cuts1", "fmaxpe<0.4; qpe [1/bin]; fprompt [0.01/bin]", 2000, 0, 2000, 100, 0.0, 1.0 );
H2_qpe_fprompt_cutROI = TH2D( "H2_qpe_fprompt_cutROI", "MBR<630, fmaxpe<0.4; qpe [1/bin]; fprompt [0.01/bin]", 2000, 0, 2000, 1000, 0.0, 1.0 );
H2_qpe_fprompt_cut2ROI = TH2D( "H2_qpe_fprompt_cut2ROI", "MBR<630, fmaxpe<0.4, cft2R<0.04, cfb3r<0.1, pulseindexfirstgar>2; qpe [1/bin]; fprompt [0.01/bin]", 2000, 0, 2000, 1000, 0.0, 1.0 );

array_rates = array('d')
array_runs = array('d')
i = 0
for fname in processfile:
    # Merged_31561.root
    run = int(fname[7:7+5])
    print run
    runcheck = database[i][0]
    if runcheck != run:
        print "data size bug"
        break
    ff = TFile(fname)
    tree = ff.Get("T")
    n_level7 = tree.GetEntries()
    liveTime = database[i][1]
    rate = n_level7/liveTime
    array_rates.append(rate)
    array_runs.append(run)
    i += 1


gRates = TGraph(i, array_runs, array_rates)
gRates.SetLineColor( 2 )
gRates.SetLineWidth( 3 )
gRates.SetMarkerColor( 2 )
gRates.SetMarkerStyle( 21 )
gRates.SetTitle( 'Total runs' )
gRates.GetXaxis().SetTitle( 'run number' )
gRates.GetYaxis().SetTitle( 'counts/sec' )
gRates.Draw( 'AP' )
raw_input()
